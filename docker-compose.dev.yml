services:
  # Backend Flask (desenvolvimento)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: multi-domain-dashboard-backend-dev
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - MULTI_DOMAIN_MODE=true
      - DOMAINS_CONFIG_PATH=/app/domains.json
      # Legacy environment variables for backward compatibility
      - GOOGLE_SHEET_ID=${GOOGLE_SHEET_ID:-1vPoodpppoT0CF0ly7RSaEGjYzaHvWchYiimNPcUyHTI}
      - CLIENT_NAME=${CLIENT_NAME:-Desktop}
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./backend/domains.json:/app/domains.json:ro
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "/app/docker-healthcheck.py"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 40s

  # Frontend React com Hot Reload
  frontend-dev:
    image: node:18-alpine
    container_name: multi-domain-dashboard-frontend-dev
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - REACT_APP_MULTI_DOMAIN=true
      - REACT_APP_API_URL=http://localhost:5001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm start"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  default:
    name: multi-domain-dashboard-dev-network

volumes:
  data:
    driver: local